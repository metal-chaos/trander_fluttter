name: CI

on:
  push:
    branches:
      - master

jobs:
  # ----------------------------------------------------------------- #
  # Build for Android
  # ----------------------------------------------------------------- #
  build_Android:
    runs-on: ubuntu-latest

    steps:
      - name: Checks-out my repository
        uses: actions/checkout@v2

      # Install Flutter
      - name: Install Flutter
        run: git clone https://github.com/flutter/flutter.git

      # PATH を通す
      - name: Add path
        run: echo "$(pwd)/flutter/bin" >> $GITHUB_PATH

      # パッケージのダウンロード
      - name: Download Flutter packages
        run: flutter pub get

      # Secrets からgoogleplay.jks を生成
      - name: Create googleplay.jks
        run: echo -n ${{ secrets.ANDROID_KEY_JKS }} | base64 -d > android/app/googleplay.jks # -n で改行を消している

      # Secrets から service-account-key.json を生成
      - name: Create service-account-key.json
        run: echo -n ${{ secrets.SERVICE_ACCOUNT_KEY_JSON }} | base64 -d > android/service-account-key.json

      # Dot env files
      - name: Create dot env file
        run: echo -n ${{ secrets.ENV_FILE }} | base64 -d > .env

      - name: Create dot env file under assets (dev)
        run: touch assets/.env.dev

      - name: Create dot env file under assets (stg)
        run: touch assets/.env.stg

      - name: Create dot env file under assets (prod)
        run: echo -n ${{ secrets.ASSET_ENV_FILE }} | base64 -d > assets/.env.prod

      # google-services.json
      - name: Create google-services.json
        run: echo -n ${{ secrets.GOOGLE_SERVICES_JSON }} | base64 -d > android/app/src/prod/google-services.json

      # Secrets から key.properties を生成
      # key.properties には各種シークレットな文字列なり file name なりを渡している
      - name: Create key.properties
        # > android/key.properties で 上書き
        # >> android/key.properties で　追加
        run: |
          echo 'storeFile=googleplay.jks' > android/key.properties
          echo 'serviceAccountFile=service-account-key.json' >> android/key.properties
          echo 'storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}' >> android/key.properties
          echo 'keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}' >> android/key.properties
          echo 'keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}' >> android/key.properties

      # App Bundle を生成
      - name: Building Android AppBundle
        run: flutter build appbundle --release --dart-define=FLAVOR=prod --build-number ${GITHUB_RUN_NUMBER} # build-number には run_number を渡している

      # Upload to google play
      - name: Release appbundle to internal track
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: android/service-account-key.json
          packageName: net.uuta.trander
          releaseFiles: app-release.aab
          status: completed
          track: internal

      # Slack notification
      - name: Notify deployment
        uses: 8398a7/action-slack@v3.8.0
        with:
          status: ${{ job.status }}
          fields: all
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
